// html,


.Particles {
    position: absolute;
    overflow: hidden;
    // background-color: red;
    width: 100%;
    height: 100vh;
}

.circle-container {
    $particleWidth: 8px;
    $particleNum: 30;
    // $particleColor: hsl(180, 100%, 80%);
    transform: translateY(0vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    .circle {
        overflow: hidden;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        mix-blend-mode: screen;
        background-image: radial-gradient(hsl(180, 100%, 80%),
                hsl(0, 0%, 100%) 10%,
                hsla(180, 100%, 80%, 0) 56%);

        animation: fadein-frames 200ms infinite, scale-frames 4s infinite;

        @keyframes fade-frames {
            0% {
                opacity: 1;
            }

            50% {
                opacity: 0.7;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes scale-frames {
            0% {
                transform: scale3d(0.4, 0.4, 1);
            }

            50% {
                transform: scale3d(2.2, 2.2, 1);
            }

            100% {
                transform: scale3d(0.4, 0.4, 1);
            }
        }
    }

    @for $i from 1 through $particleNum {
        &:nth-child(#{$i}) {
            $circleSize: random($particleWidth);
            width: $circleSize + px;
            height: $circleSize + px;

            $startPositionY: random(10)+100;
            $framesName: "move-frames-"+$i;
            $moveDuration: 14000+random(4000)+ms;
            transform: scale3d(0, 0, 0);
            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: random(11000) + ms;

            @keyframes #{$framesName} {
                from {
                    transform: scale3d(1, 1, 1);

                    transform: translate3d(#{random(100) + vw},
                        #{$startPositionY + vh},
                        0);
                }

                to {
                    transform: translate3d(#{random(100) + vw},
                        #{- $startPositionY - random(30) + vh},
                        0);
                }
            }

            .circle {
                animation-delay: random(4000) + ms;
            }
        }
    }
}